/*
 * Copyright 2009, Google Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
var g_cameraPosition = [
[0.0, 2.68106, -1.2765],
[0.0, 2.68075, -1.27636],
[0.0, 2.67981, -1.27591],
[0.0, 2.67827, -1.27517],
[0.0, 2.67612, -1.27415],
[0.0, 2.67337, -1.27284],
[0.0, 2.67003, -1.27125],
[0.0, 2.66611, -1.26939],
[0.0, 2.66162, -1.26725],
[0.0, 2.65656, -1.26484],
[0.0, 2.65095, -1.26217],
[0.0, 2.64478, -1.25923],
[0.0, 2.63807, -1.25604],
[0.0, 2.63083, -1.25259],
[0.0, 2.62306, -1.24889],
[0.0, 2.61478, -1.24495],
[0.0, 2.60598, -1.24076],
[0.0, 2.59668, -1.23633],
[0.0, 2.58689, -1.23167],
[0.0, 2.57661, -1.22677],
[0.0, 2.56584, -1.22165],
[0.0, 2.55461, -1.2163],
[0.0, 2.54292, -1.21073],
[0.0, 2.53077, -1.20495],
[0.0, 2.51817, -1.19895],
[0.0, 2.50513, -1.19274],
[0.0, 2.49166, -1.18633],
[0.0, 2.47776, -1.17971],
[0.0, 2.46345, -1.1729],
[0.0, 2.44873, -1.16589],
[0.0, 2.43362, -1.15869],
[0.0, 2.4181, -1.15131],
[0.0, 2.40221, -1.14374],
[0.0, 2.38593, -1.13599],
[0.0, 2.36929, -1.12806],
[0.0, 2.35228, -1.11997],
[0.0, 2.33493, -1.1117],
[0.0, 2.31722, -1.10327],
[0.0, 2.29918, -1.09468],
[0.0, 2.28081, -1.08594],
[0.0, 2.26212, -1.07704],
[0.0, 2.24311, -1.06799],
[0.0, 2.2238, -1.05879],
[0.0, 2.20418, -1.04945],
[0.0, 2.18428, -1.03998],
[0.0, 2.1641, -1.03037],
[0.0, 2.14364, -1.02063],
[0.0, 2.12291, -1.01076],
[0.0, 2.10192, -1.00077],
[0.0, 2.08069, -0.990654],
[0.0, 2.0592, -0.980427],
[0.0, 2.03749, -0.970087],
[0.0, 2.01554, -0.959639],
[0.0, 1.99338, -0.949086],
[0.0, 1.971, -0.938433],
[0.0, 1.94842, -0.927682],
[0.0, 1.92565, -0.916837],
[0.0, 1.90268, -0.905903],
[0.0, 1.87954, -0.894883],
[0.0, 1.85622, -0.883781],
[0.0, 1.83273, -0.8726],
[0.0, 1.80909, -0.861344],
[0.0, 1.7853, -0.850018],
[0.0, 1.76137, -0.838624],
[0.0, 1.73731, -0.827166],
[0.0, 1.71312, -0.815649],
[0.0, 1.68881, -0.804075],
[0.0, 1.66439, -0.792449],
[0.0, 1.63987, -0.780775],
[0.0, 1.61526, -0.769056],
[0.0, 1.59056, -0.757295],
[0.0, 1.56578, -0.745498],
[0.0, 1.54093, -0.733666],
[0.0, 1.51602, -0.721805],
[0.0, 1.49105, -0.709918],
[0.0, 1.46604, -0.698008],
[0.0, 1.44098, -0.686079],
[0.0, 1.4159, -0.674135],
[0.0, 1.39079, -0.66218],
[0.0, 1.36566, -0.650218],
[0.0, 1.34053, -0.638252],
[0.0, 1.3154, -0.626286],
[0.0, 1.29027, -0.614324],
[0.0, 1.26516, -0.602369],
[0.0, 1.24008, -0.590426],
[0.0, 1.21503, -0.578497],
[0.0, 1.19001, -0.566587],
[0.0, 1.16504, -0.5547],
[0.0, 1.14013, -0.542838],
[0.0, 1.11528, -0.531007],
[0.0, 1.0905, -0.519209],
[0.0, 1.0658, -0.507449],
[0.0, 1.04119, -0.495729],
[0.0, 1.01667, -0.484055],
[0.0, 0.99225, -0.472429],
[0.0, 0.967942, -0.460856],
[0.0, 0.943752, -0.449338],
[0.0, 0.919688, -0.437881],
[0.0, 0.895756, -0.426487],
[0.0, 0.871967, -0.41516],
[0.0, 0.848326, -0.403904],
[0.0, 0.824843, -0.392724],
[0.0, 0.801525, -0.381621],
[0.0, 0.778379, -0.370601],
[0.0, 0.755414, -0.359667],
[0.0, 0.732637, -0.348823],
[0.0, 0.710057, -0.338072],
[0.0, 0.687681, -0.327418],
[0.0, 0.665517, -0.316865],
[0.0, 0.643572, -0.306417],
[0.0, 0.621856, -0.296077],
[0.0, 0.600375, -0.28585],
[0.0, 0.579138, -0.275738],
[0.0, 0.558151, -0.265747],
[0.0, 0.537424, -0.255878],
[0.0, 0.516964, -0.246137],
[0.0, 0.496779, -0.236526],
[0.0, 0.476877, -0.22705],
[0.0, 0.457265, -0.217712],
[0.0, 0.437951, -0.208517],
[0.0, 0.418944, -0.199467],
[0.0, 0.400251, -0.190567],
[0.0, 0.38188, -0.18182],
[0.0, 0.363839, -0.173231],
[0.0, 0.346135, -0.164802],
[0.0, 0.328777, -0.156537],
[0.0, 0.311773, -0.148441],
[0.0, 0.295129, -0.140517],
[0.0, 0.278855, -0.132768],
[0.0, 0.262958, -0.125199],
[0.0, 0.247445, -0.117814],
[0.0, 0.232326, -0.110615],
[0.0, 0.217607, -0.103607],
[0.0, 0.203296, -0.0967932],
[0.0, 0.189401, -0.0901778],
[0.0, 0.175931, -0.0837641],
[0.0, 0.162893, -0.0775564],
[0.0, 0.150294, -0.071558],
[0.0, 0.138143, -0.0657728],
[0.0, 0.126448, -0.0602043],
[0.0, 0.115216, -0.0548568],
[0.0, 0.104456, -0.0497334],
[0.0, 0.0941741, -0.0448382],
[0.0, 0.0843797, -0.0401747],
[0.0, 0.0750802, -0.0357471],
[0.0, 0.0662832, -0.0315588],
[0.0, 0.057997, -0.0276134],
[0.0, 0.0502291, -0.0239151],
[0.0, 0.0429873, -0.020467],
[0.0, 0.0362799, -0.0172734],
[0.0, 0.0301144, -0.014338],
[0.0, 0.0244987, -0.0116644],
[0.0, 0.0194409, -0.00925612],
[0.0, 0.0149486, -0.00711727],
[0.0, 0.01103, -0.00525165],
[0.0, 0.00769234, -0.00366259],
[0.0, 0.00494409, -0.00235391],
[0.0, 0.00279284, -0.00132966],
[0.0, 0.00124645, -0.000593424],
[0.0, 0.000313044, -0.000149012],
[0.0, 0.0, 0.0]
];
var g_cameraTarget = [
[-2.01925, 2.80585, 0.0],
[-2.01901, 2.80552, 0.0],
[-2.01831, 2.80454, 0.0],
[-2.01714, 2.80292, 0.0],
[-2.01552, 2.80067, 0.0],
[-2.01345, 2.7978, 0.0],
[-2.01094, 2.7943, 0.0],
[-2.00799, 2.7902, 0.0],
[-2.0046, 2.7855, 0.0],
[-2.00079, 2.78021, 0.0],
[-1.99656, 2.77433, 0.0],
[-1.99192, 2.76788, 0.0],
[-1.98687, 2.76086, 0.0],
[-1.98142, 2.75328, 0.0],
[-1.97556, 2.74515, 0.0],
[-1.96932, 2.73648, 0.0],
[-1.9627, 2.72727, 0.0],
[-1.95569, 2.71754, 0.0],
[-1.94832, 2.70729, 0.0],
[-1.94057, 2.69653, 0.0],
[-1.93247, 2.68527, 0.0],
[-1.92401, 2.67351, 0.0],
[-1.9152, 2.66127, 0.0],
[-1.90605, 2.64856, 0.0],
[-1.89656, 2.63537, 0.0],
[-1.88674, 2.62173, 0.0],
[-1.8766, 2.60763, 0.0],
[-1.86613, 2.59309, 0.0],
[-1.85535, 2.57811, 0.0],
[-1.84427, 2.56271, 0.0],
[-1.83288, 2.54688, 0.0],
[-1.8212, 2.53065, 0.0],
[-1.80923, 2.51401, 0.0],
[-1.79697, 2.49698, 0.0],
[-1.78443, 2.47956, 0.0],
[-1.77163, 2.46177, 0.0],
[-1.75855, 2.4436, 0.0],
[-1.74522, 2.42507, 0.0],
[-1.73163, 2.40619, 0.0],
[-1.7178, 2.38697, 0.0],
[-1.70372, 2.3674, 0.0],
[-1.6894, 2.34751, 0.0],
[-1.67486, 2.3273, 0.0],
[-1.66008, 2.30677, 0.0],
[-1.6451, 2.28595, 0.0],
[-1.62989, 2.26482, 0.0],
[-1.61448, 2.24341, 0.0],
[-1.59887, 2.22172, 0.0],
[-1.58307, 2.19975, 0.0],
[-1.56707, 2.17753, 0.0],
[-1.55089, 2.15505, 0.0],
[-1.53454, 2.13232, 0.0],
[-1.51801, 2.10935, 0.0],
[-1.50132, 2.08616, 0.0],
[-1.48446, 2.06274, 0.0],
[-1.46746, 2.03911, 0.0],
[-1.4503, 2.01527, 0.0],
[-1.43301, 1.99124, 0.0],
[-1.41558, 1.96702, 0.0],
[-1.39801, 1.94261, 0.0],
[-1.38033, 1.91804, 0.0],
[-1.36252, 1.8933, 0.0],
[-1.3446, 1.8684, 0.0],
[-1.32658, 1.84335, 0.0],
[-1.30846, 1.81817, 0.0],
[-1.29024, 1.79285, 0.0],
[-1.27193, 1.76741, 0.0],
[-1.25354, 1.74186, 0.0],
[-1.23507, 1.7162, 0.0],
[-1.21653, 1.69044, 0.0],
[-1.19793, 1.66459, 0.0],
[-1.17927, 1.63866, 0.0],
[-1.16055, 1.61265, 0.0],
[-1.14179, 1.58658, 0.0],
[-1.12299, 1.56045, 0.0],
[-1.10415, 1.53427, 0.0],
[-1.08528, 1.50805, 0.0],
[-1.06638, 1.4818, 0.0],
[-1.04747, 1.45552, 0.0],
[-1.02855, 1.42923, 0.0],
[-1.00962, 1.40292, 0.0],
[-0.990694, 1.37662, 0.0],
[-0.971771, 1.35033, 0.0],
[-0.952861, 1.32405, 0.0],
[-0.933968, 1.2978, 0.0],
[-0.915098, 1.27158, 0.0],
[-0.896259, 1.2454, 0.0],
[-0.877454, 1.21927, 0.0],
[-0.858691, 1.1932, 0.0],
[-0.839976, 1.16719, 0.0],
[-0.821314, 1.14126, 0.0],
[-0.80271, 1.11541, 0.0],
[-0.784172, 1.08965, 0.0],
[-0.765705, 1.06399, 0.0],
[-0.747315, 1.03843, 0.0],
[-0.729007, 1.01299, 0.0],
[-0.710788, 0.987677, 0.0],
[-0.692664, 0.962493, 0.0],
[-0.67464, 0.937448, 0.0],
[-0.656723, 0.912552, 0.0],
[-0.638918, 0.887811, 0.0],
[-0.621232, 0.863234, 0.0],
[-0.60367, 0.838831, 0.0],
[-0.586237, 0.814608, 0.0],
[-0.568941, 0.790574, 0.0],
[-0.551787, 0.766737, 0.0],
[-0.534781, 0.743106, 0.0],
[-0.517928, 0.719688, 0.0],
[-0.501235, 0.696492, 0.0],
[-0.484708, 0.673527, 0.0],
[-0.468352, 0.650799, 0.0],
[-0.452173, 0.628319, 0.0],
[-0.436178, 0.606093, 0.0],
[-0.420373, 0.58413, 0.0],
[-0.404762, 0.562438, 0.0],
[-0.389352, 0.541026, 0.0],
[-0.37415, 0.519901, 0.0],
[-0.35916, 0.499072, 0.0],
[-0.34439, 0.478547, 0.0],
[-0.329844, 0.458335, 0.0],
[-0.315528, 0.438443, 0.0],
[-0.30145, 0.41888, 0.0],
[-0.287613, 0.399654, 0.0],
[-0.274026, 0.380773, 0.0],
[-0.260692, 0.362246, 0.0],
[-0.247619, 0.34408, 0.0],
[-0.234812, 0.326284, 0.0],
[-0.222277, 0.308866, 0.0],
[-0.21002, 0.291834, 0.0],
[-0.198047, 0.275197, 0.0],
[-0.186364, 0.258962, 0.0],
[-0.174977, 0.243139, 0.0],
[-0.163891, 0.227735, 0.0],
[-0.153113, 0.212758, 0.0],
[-0.142648, 0.198217, 0.0],
[-0.132503, 0.18412, 0.0],
[-0.122683, 0.170474, 0.0],
[-0.113194, 0.157289, 0.0],
[-0.104043, 0.144573, 0.0],
[-0.0952346, 0.132333, 0.0],
[-0.0867753, 0.120579, 0.0],
[-0.078671, 0.109317, 0.0],
[-0.0709275, 0.0985574, 0.0],
[-0.0635507, 0.0883071, 0.0],
[-0.0565467, 0.0785746, 0.0],
[-0.0499213, 0.0693683, 0.0],
[-0.0436804, 0.0606963, 0.0],
[-0.03783, 0.0525668, 0.0],
[-0.032376, 0.0449881, 0.0],
[-0.0273242, 0.0379685, 0.0],
[-0.0226807, 0.031516, 0.0],
[-0.0184513, 0.0256391, 0.0],
[-0.014642, 0.0203458, 0.0],
[-0.0112586, 0.0156445, 0.0],
[-0.00830718, 0.0115433, 0.0],
[-0.00579355, 0.00805045, 0.0],
[-0.00372367, 0.00517423, 0.0],
[-0.00210345, 0.00292285, 0.0],
[-0.000938814, 0.00130453, 0.0],
[-0.000235691, 0.000327504, 0.0],
[0.0, 0.0, 0.0]
];

function removeScreen(oldScreen)
{
  oldScreen.visible = false;
  oldScreen.transform.parent = null;
}

function addScreen(texture)
{
  var newScreen = new Image(texture, false);
  newScreen.transform.translate(g_client.width/2, g_client.height/2, -1);
  return newScreen;
}

function switchScreen(oldScreen,texture)
{
  removeScreen(oldScreen);
  return addScreen(texture);
}

function splashScreen(render_event)
{
  if(!g_splashScreenA)
  {
    clients[0].o3dObj.focus();
    clients[0].setSlightView();
    if(g_textures[11])
    {
      g_splashScreenA = addScreen(g_textures[11]);
    }
  }
  if(g_loading)
  {
    var loadAmount = 0;
    for(i = 0; i < g_loaders.length; i++)
    {
      var percent = g_loaders[i].getKnownProgressInfoSoFar().percent;
      loadAmount += percent;
    }
    loadAmount /= g_loaders.length;
    if(loadAmount >= 100)
    {
      g_loading = false;
      setupControls("SPLASH");
      setupGame();
      g_splashScreenB = switchScreen(g_splashScreenA,g_textures[17]);
      clients[0].client.clearRenderCallback();
      clients[0].client.setRenderCallback(tutorialScreen);
    }
  }
}

function tutorialScreen(render_event)
{
  if(g_splashState == "DONE")
  {
    removeScreen(g_splashScreenB);

    clients[0].client.clearRenderCallback();
    clients[0].client.setRenderCallback(cinematicCamera);
  }
}

function cinematicCamera(render_event)
{
  g_cameraTimer += render_event.elapsedTime;
  if(g_cameraTimer > TIME_PER_CAMERA_MOVE)
  {
    if(g_cameraCounter < g_cameraPosition.length && g_cameraCounter < g_cameraTarget.length)
    {
      clients[0].horzMove = g_cameraPosition[g_cameraCounter][0];
      clients[0].vertMove = g_cameraPosition[g_cameraCounter][1];
      clients[0].depthMove = g_cameraPosition[g_cameraCounter][2];
      clients[0].horzPan = g_cameraTarget[g_cameraCounter][0];
      clients[0].vertPan = g_cameraTarget[g_cameraCounter][1];
      clients[0].zoom = g_cameraTarget[g_cameraCounter][2];

      clients[0].setSlightView();
      g_cameraCounter++;
      g_cameraTimer = 0;
    }
    else
    {
      clients[0].client.clearRenderCallback();
      clients[0].client.setRenderCallback(loadGame);
    }
  }
}

function helpScreen(render_event)
{
  if(g_splashState == "DONE")
  {
    g_splashState = "RUNNING";
    setupControls("GAME");
    removeScreen(g_splashScreenB);
    onAnimate();
  }
}

function finishScreen(render_event)
{
  endTimer += render_event.elapsedTime;
  var cameraSpeed = 0.5;
  var cameraRadius = 2.5;
    // Fly the camera around the city.
    var eye = [
      Math.sin(endTimer * cameraSpeed) * cameraRadius,
      Math.cos(endTimer * cameraSpeed) * cameraRadius,
      cameraRadius];

    clients[0].viewInfo.drawContext.view = o3djs.math.matrix4.lookAt(
      eye,
      [0, 0, 0],  // target
      [0, 0, 1]); // up

  if(g_splashState == "DONE")
  {
      g_canvas.canvas.clear([1, 1, 1, 0]);
    endTimer = 0;
    clients[0].setSlightView();
    g_splashState = "RUNNING";
    setupControls("GAME");
    removeScreen(g_splashScreenB);
    onAnimate();
    onResetGame();
  }
}
